---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ app_name }}
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: {{ controller_deployment_name }}
  namespace: {{ app_namespace }}
spec:
  selector:
    matchLabels:
      app: {{ app_name }}
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  serviceName: {{ controller_service_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
      annotations:
{% if cors_origins is defined %}
        configHash: "{{ (inventory_volume_path | string)
        | join(cors_origins | string) }}"
{% else %}
        configHash: "{{ (inventory_volume_path | string) }}"
{% endif %}
    spec:
      serviceAccountName: {{ controller_service_name }}
      containers:
      - name: controller
        command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: main
        - name: API_HOST
          value: {{ inventory_service_name }}.{{ app_namespace }}.svc.cluster.local
        - name: API_PORT
          value: "8443"
        - name: API_TLS_ENABLED
          value: "true"
        - name: SECRET_NAME
          value: webhook-server-secret
{% if controller_log_level is defined and controller_log_level is number %}
        - name: LOG_LEVEL
          value: "{{ controller_log_level }}"
{% endif %}
{% if controller_profile_kind is defined and controller_profile_path is defined and controller_profile_duration is defined %}
        - name: PROFILE_KIND
          value: "{{ controller_profile_kind }}"
        - name: PROFILE_PATH
          value: "{{ controller_profile_path }}/main"
        - name: PROFILE_DURATION
          value: "{{ controller_profile_duration }}"
{% endif %}
        envFrom:
        - configMapRef:
            name: {{ controller_configmap_name }}
        image: {{ controller_image_fqin }}
        imagePullPolicy: {{ image_pull_policy }}
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: {{ controller_container_limits_cpu }}
            memory: {{ controller_container_limits_memory }}
          requests:
            cpu: {{ controller_container_requests_cpu }}
            memory: {{ controller_container_requests_memory }}
        volumeMounts:
        - mountPath: /tmp/cert
          name: cert
          readOnly: true
        - mountPath: {{ profiler_volume_path }}
          name: profiler
      - name: inventory
        command:
        - /usr/local/bin/manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ROLE
          value: inventory
        - name: SECRET_NAME
          value: webhook-server-secret
        - name: API_PORT
          value: "8443"
        - name: API_TLS_ENABLED
          value: "true"
        - name: API_TLS_CERTIFICATE
          value: /var/run/secrets/{{ inventory_service_name }}-serving-cert/tls.crt
        - name: API_TLS_KEY
          value: /var/run/secrets/{{ inventory_service_name }}-serving-cert/tls.key
        - name: METRICS_PORT
          value: '8081'
{% if feature_validation|bool %}
        - name: POLICY_AGENT_URL
          value: "https://{{ validation_service_name }}.{{ app_namespace }}.svc.cluster.local:8181"
        - name: POLICY_AGENT_SEARCH_INTERVAL
          value: "{{ validation_policy_agent_search_interval }}"
{% endif %}
{% if controller_log_level is defined and controller_log_level is number %}
        - name: LOG_LEVEL
          value: "{{ controller_log_level }}"
{% endif %}
{% if controller_profile_kind is defined and controller_profile_path is defined and controller_profile_duration is defined %}
        - name: PROFILE_KIND
          value: "{{ controller_profile_kind }}"
        - name: PROFILE_PATH
          value: "{{ controller_profile_path }}/inventory"
        - name: PROFILE_DURATION
          value: "{{ controller_profile_duration }}"
{% endif %}
        envFrom:
        - configMapRef:
            name: {{ controller_configmap_name }}
        image: {{ controller_image_fqin }}
        imagePullPolicy: {{ image_pull_policy }}
        ports:
        - name: api
          containerPort: 8443
          protocol: TCP
        resources:
          limits:
            cpu: {{ inventory_container_limits_cpu }}
            memory: {{ inventory_container_limits_memory }}
          requests:
            cpu: {{ inventory_container_requests_cpu }}
            memory: {{ inventory_container_requests_memory }}
        volumeMounts:
        - mountPath: {{ inventory_volume_path }}
          name: inventory
        - mountPath: {{ profiler_volume_path }}
          name: profiler
        - mountPath: /var/run/secrets/{{ inventory_service_name }}-serving-cert
          name: {{ inventory_service_name }}-serving-cert
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-secret
      - name: {{ inventory_service_name }}-serving-cert
        secret:
          defaultMode: 420
          secretName: {{ inventory_service_name }}-serving-cert
      - name: inventory
        emptyDir: {}
      - name: profiler
        emptyDir: {}
